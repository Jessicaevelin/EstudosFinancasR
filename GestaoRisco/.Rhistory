if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
kable(maiorRisco, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
maiorRetorno
maiorRisco
teste <- cbind(maiorRetorno,maiorRisco)
teste
teste <- rbind(maiorRetorno,maiorRisco)
teste
riscoRetorno <- data.frame(Media = c(1,2,3), Cv = c(3,2,1))
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
teste <- rbind(maiorRetorno,maiorRisco)
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(teste, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
maiorRiscoRetorno
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
maiorRiscoRetorno
View(maiorRiscoRetorno)
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
View(maiorRiscoRetorno)
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado$data = precos_carteira$data
normalizado$data = as.Date(normalizado$data, format = "%Y-%m-%d")
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado
remove(list=ls())
ls()
options(scipen=999)
options(max.print = 100000)
#setwd("~/Documents/UFPB2021/TraineeGR/GestaoRisco")
# Executando um script externo
#source("Relatorio_Final.R", encoding = 'UTF-8', echo=TRUE)
library(tseries)
library(zoo)
library(tidyverse)
library(kableExtra)
calcular <- function(codigos) {
# Laco de repeticao, roda esse bloco de codigo de acordo com o tamanho da carteira
ativos <- list()
precosTemp <- NULL
i <- 1
while(i <= length(codigos)) {
precosTemp  <- na.omit(get.hist.quote(codigos[i], quote = "Close", start = data.inicial, end = data.final))
ativos[[codigos[i]]] <- precosTemp
i <- i + 1
}
# download ibovespa
ibov  <- na.omit(get.hist.quote("^BVSP", quote = "Close", start = data.inicial, end = data.final))
precos = as.data.frame(ativos)
names(precos) <- codigos
# data frame com os precos e o ibovespa
df.precos <- as.data.frame(na.omit(merge(ibov, as.zoo(precos))))
names(df.precos) <- c("IBOVESPA", codigos)
# Retornos -------------------------------------------------------------------
# função que calcula os retornos
retorno = function(x){(diff(log(x)))*100}
# retornos de todas as colunas
df.retornos <- as.data.frame(lapply(df.precos, retorno))
# Estatisticas Descritivas dos Retornos  --------------------------------------------------------------
# média dos retornos
mediaRetornos <- df.retornos %>%
summarise(across(.fns = mean))
desvioRetornos <- df.retornos %>%
summarise(across(.fns = sd))
desvio_100 <- desvioRetornos/100
coeficienteRetornos <- desvioRetornos/mediaRetornos
mediaMes <- mediaRetornos *24
volatilidadeRetornos <- desvioRetornos*sqrt(252)
# Juntando as informações estatísticas em um só data frame
estatisticasRetornos <- as.data.frame(rbind(mediaRetornos, desvioRetornos,desvio_100, coeficienteRetornos,mediaMes, volatilidadeRetornos))
# Mudando o nome das linhas
rownames(estatisticasRetornos) <- c("Media", "SD","SD/100", "Cv", "Media Mensal", "Volatilidade")
# Transpondo o data frame
estatisticasRetornos <- as.data.frame(t(estatisticasRetornos))
return(list(
medias = mediaRetornos,
desvios = desvioRetornos,
coeficienteVariacao = coeficienteRetornos,
mediaMensal = mediaMes,
volatilidade = volatilidadeRetornos,
precos = df.precos,
retornos = df.retornos,
estatisticasDescritivas = estatisticasRetornos
))
}
data.inicial <- Sys.Date()-200
data.final <- Sys.Date()
codigos <- c("SOMA3.SA","HYPE3.SA")
info <- calcular(codigos)
kable(head(info$precos, 5), col.names = names(info$precos)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
kable(head(info$retornos, 5), col.names = names(info$retornos)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado
kable(info$estatisticasDescritivas, col.names = colnames(info$estatisticasDescritivas)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
riscoRetorno <- info$estatisticasDescritivas %>% select(Media, Cv)
kable(riscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
Empresas = rownames(riscoRetorno)
ggplot(riscoRetorno, aes(x=Cv, y=Media)) +
theme_update(text = element_text(size=20)) +
geom_point(aes(label = Empresas, colour = Empresas), size = 10)+
xlab('Risco') + ylab('Média dos Retornos')
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
normalizado
View(normalizado)
info$precos
normalizado = cbind(normalizado, rownames(info$precos))
normalizado = cbind(normalizado, data =rownames(info$precos))
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado = cbind(normalizado, data =rownames(info$precos))
d = melt(normalizado, id.vars = normalizado$data)
install.packages("reshape")
library(reshape)
d = melt(normalizado, id.vars = normalizado$data)
d = melt(normalizado, id.vars = normalizado)
ggplot(normalizado, aes(data, value, col=variable, group = variable)) +
geom_line()
rownames(normalizado) <- rownames(info$precos)
d = melt(normalizado, id.vars = 'date')
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado$data = rownames(info$precos)
normalizado$data = as.Date(normalizado$data, format = "%Y-%m-%d")
d = melt(normalizado, id.vars = 'date')
d = melt(normalizado, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado$data = rownames(info$precos)
normalizado$data = as.Date(normalizado$data, format = "%Y-%m-%d")
d = melt(normalizado, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
graficoRetornos = info$retornos
View(graficoRetornos)
graficoRetornos$data = rownames(info$precos)-1
rownames(info$precos)-1
graficoRetornos$data = rownames(info$precos)
graficoRetornos = info$retornos-1
graficoRetornos$data = rownames(info$precos)
graficoRetornos = info$retornos
graficoRetornos$data = rownames(info$precos-1)
rownames(info$precos-1)
graficoRetornos$data = rownames(info$precos-2)
graficoRetornos$data = rownames(tail(info$precos,length(info$precos)-1)
graficoRetornos = info$retornos
graficoRetornos = info$retornos
graficoRetornos$data = rownames(tail(info$precos,length(info$precos)-1))
graficoRetornos$data = as.Date(normalizado$data, format = "%Y-%m-%d")
graficoRetornos$data = as.Date(graficoRetornos$data, format = "%Y-%m-%d")
d = melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
graficoRetornos
View(graficoRetornos)
graficoRetornos = info$retornos
graficoRetornos$data = rownames(tail(info$precos,length(info$precos)-1))
graficoRetornos$data = as.Date(graficoRetornos$data, format = "%Y-%m-%d")
d = melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
remove(list=ls())
ls()
options(scipen=999)
options(max.print = 100000)
#setwd("~/Documents/UFPB2021/TraineeGR/GestaoRisco")
# Executando um script externo
#source("Relatorio_Final.R", encoding = 'UTF-8', echo=TRUE)
library(tseries)
library(zoo)
library(tidyverse)
library(kableExtra)
library(reshape)
calcular <- function(codigos) {
# Laco de repeticao, roda esse bloco de codigo de acordo com o tamanho da carteira
ativos <- list()
precosTemp <- NULL
i <- 1
while(i <= length(codigos)) {
precosTemp  <- na.omit(get.hist.quote(codigos[i], quote = "Close", start = data.inicial, end = data.final))
ativos[[codigos[i]]] <- precosTemp
i <- i + 1
}
# download ibovespa
ibov  <- na.omit(get.hist.quote("^BVSP", quote = "Close", start = data.inicial, end = data.final))
precos = as.data.frame(ativos)
names(precos) <- codigos
# data frame com os precos e o ibovespa
df.precos <- as.data.frame(na.omit(merge(ibov, as.zoo(precos))))
names(df.precos) <- c("IBOVESPA", codigos)
# Retornos -------------------------------------------------------------------
# função que calcula os retornos
retorno = function(x){(diff(log(x)))*100}
# retornos de todas as colunas
df.retornos <- as.data.frame(lapply(df.precos, retorno))
# Estatisticas Descritivas dos Retornos  --------------------------------------------------------------
# média dos retornos
mediaRetornos <- df.retornos %>%
summarise(across(.fns = mean))
desvioRetornos <- df.retornos %>%
summarise(across(.fns = sd))
desvio_100 <- desvioRetornos/100
coeficienteRetornos <- desvioRetornos/mediaRetornos
mediaMes <- mediaRetornos *24
volatilidadeRetornos <- desvioRetornos*sqrt(252)
# Juntando as informações estatísticas em um só data frame
estatisticasRetornos <- as.data.frame(rbind(mediaRetornos, desvioRetornos,desvio_100, coeficienteRetornos,mediaMes, volatilidadeRetornos))
# Mudando o nome das linhas
rownames(estatisticasRetornos) <- c("Media", "SD","SD/100", "Cv", "Media Mensal", "Volatilidade")
# Transpondo o data frame
estatisticasRetornos <- as.data.frame(t(estatisticasRetornos))
return(list(
medias = mediaRetornos,
desvios = desvioRetornos,
coeficienteVariacao = coeficienteRetornos,
mediaMensal = mediaMes,
volatilidade = volatilidadeRetornos,
precos = df.precos,
retornos = df.retornos,
estatisticasDescritivas = estatisticasRetornos
))
}
data.inicial <- Sys.Date()-300
data.final <- Sys.Date()
codigos <- c("SOMA3.SA","HYPE3.SA")
info <- calcular(codigos)
kable(head(info$precos, 5), col.names = names(info$precos)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado$data = rownames(info$precos)
normalizado$data = as.Date(normalizado$data, format = "%Y-%m-%d")
d = melt(normalizado, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
kable(head(info$retornos, 5), col.names = names(info$retornos)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
graficoRetornos = info$retornos
graficoRetornos$data = rownames(tail(info$precos,length(info$precos)-1))
length(info$precos)
nrow(info$precos)
nrow(info$retornos)
graficoRetornos$data = rownames(info$precos)
datas = rownames(info$precos)
graficoRetornos$data = datas-1
class(rownames(info$precos))
class(rownames(info$precos))
rownames(info$precos)
a <- rownames(info$precos)
a
class(a)
teste = cbind(graficoRetornos,rownames(info$precos))
teste = rbind(graficoRetornos,rownames(info$precos))
View(teste)
graficoRetornos = info$retornos
d = melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
graficoRetornos = info$retornos
y = melt(graficoRetornos, id.vars = 'data')
ggplot(y, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
graficoRetornos = info$retornos
y = melt(graficoRetornos, id.vars = 'data')
ggplot(y, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
ggplot(graficoRetornos, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
teste = info$precos
teste = info$precos-1
teste = info$precos-1
teste = info$precos[,1]
info$precos[,1]
info$precos[,2]
info$precos[,]
tail(info$precos,1)
tail(info$precos,length(info$precos)-1)
tail(info$precos,length(info$precos)-1)
length(info$precos)
nrow(info$precos)
tail(info$precos,nrow(info$precos)-1)
graficoRetornos = tail(info$precos,nrow(info$precos)-1)
graficoRetornos$data = as.Date(graficoRetornos$data, format = "%Y-%m-%d")
graficoRetornos = tail(rownames(info$precos),nrow(info$precos)-1)
graficoRetornos$data = as.Date(datas, format = "%Y-%m-%d")
datas = tail(rownames(info$precos),nrow(info$precos)-1)
graficoRetornos$data = as.Date(datas, format = "%Y-%m-%d")
d = melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()
datas = tail(rownames(info$precos),nrow(info$precos)-1)
graficoRetornos$data = as.Date(datas, format = "%Y-%m-%d")
d = melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()
graficoRetornos
graficoRetornos <- info$retornos
graficoRetornos <- info$retornos
datas <- tail(rownames(info$precos),nrow(info$precos)-1)
graficoRetornos$data <- as.Date(datas, format = "%Y-%m-%d")
d <- melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
remove(list=ls())
ls()
options(scipen=999)
options(max.print = 100000)
#setwd("~/Documents/UFPB2021/TraineeGR/GestaoRisco")
# Executando um script externo
#source("Relatorio_Final.R", encoding = 'UTF-8', echo=TRUE)
library(tseries)
library(zoo)
library(tidyverse)
library(kableExtra)
library(reshape)
calcular <- function(codigos) {
# Laco de repeticao, roda esse bloco de codigo de acordo com o tamanho da carteira
ativos <- list()
precosTemp <- NULL
i <- 1
while(i <= length(codigos)) {
precosTemp  <- na.omit(get.hist.quote(codigos[i], quote = "Close", start = data.inicial, end = data.final))
ativos[[codigos[i]]] <- precosTemp
i <- i + 1
}
# download ibovespa
ibov  <- na.omit(get.hist.quote("^BVSP", quote = "Close", start = data.inicial, end = data.final))
precos = as.data.frame(ativos)
names(precos) <- codigos
# data frame com os precos e o ibovespa
df.precos <- as.data.frame(na.omit(merge(ibov, as.zoo(precos))))
names(df.precos) <- c("IBOVESPA", codigos)
# Retornos -------------------------------------------------------------------
# função que calcula os retornos
retorno = function(x){(diff(log(x)))*100}
# retornos de todas as colunas
df.retornos <- as.data.frame(lapply(df.precos, retorno))
# Estatisticas Descritivas dos Retornos  --------------------------------------------------------------
# média dos retornos
mediaRetornos <- df.retornos %>%
summarise(across(.fns = mean))
desvioRetornos <- df.retornos %>%
summarise(across(.fns = sd))
desvio_100 <- desvioRetornos/100
coeficienteRetornos <- desvioRetornos/mediaRetornos
mediaMes <- mediaRetornos *24
volatilidadeRetornos <- desvioRetornos*sqrt(252)
# Juntando as informações estatísticas em um só data frame
estatisticasRetornos <- as.data.frame(rbind(mediaRetornos, desvioRetornos,desvio_100, coeficienteRetornos,mediaMes, volatilidadeRetornos))
# Mudando o nome das linhas
rownames(estatisticasRetornos) <- c("Media", "SD","SD/100", "Cv", "Media Mensal", "Volatilidade")
# Transpondo o data frame
estatisticasRetornos <- as.data.frame(t(estatisticasRetornos))
return(list(
medias = mediaRetornos,
desvios = desvioRetornos,
coeficienteVariacao = coeficienteRetornos,
mediaMensal = mediaMes,
volatilidade = volatilidadeRetornos,
precos = df.precos,
retornos = df.retornos,
estatisticasDescritivas = estatisticasRetornos
))
}
data.inicial <- Sys.Date()-300
data.final <- Sys.Date()
codigos <- c("SOMA3.SA","HYPE3.SA")
info <- calcular(codigos)
kable(head(info$precos, 5), col.names = names(info$precos)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
normalizado = data.frame(lapply(info$precos, function(x) x/x[1]))
normalizado$data = rownames(info$precos)
normalizado$data = as.Date(normalizado$data, format = "%Y-%m-%d")
d = melt(normalizado, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()+
xlab('Datas') + ylab('Preços')
kable(head(info$retornos, 5), col.names = names(info$retornos)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
graficoRetornos <- info$retornos
datas <- tail(rownames(info$precos),nrow(info$precos)-1)
graficoRetornos$data <- as.Date(datas, format = "%Y-%m-%d")
d <- melt(graficoRetornos, id.vars = 'data')
ggplot(d, aes(data, value, col=variable, group = variable)) +
geom_line()
kable(info$estatisticasDescritivas, col.names = colnames(info$estatisticasDescritivas)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
riscoRetorno <- info$estatisticasDescritivas %>% select(Media, Cv)
kable(riscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
Empresas = rownames(riscoRetorno)
ggplot(riscoRetorno, aes(x=Cv, y=Media)) +
theme_update(text = element_text(size=20)) +
geom_point(aes(label = Empresas, colour = Empresas), size = 10)+
xlab('Risco') + ylab('Média dos Retornos')
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
maiorRiscoRetorno <- rbind(maiorRetorno,maiorRisco)
maiorRiscoRetorno
maiorRiscoRetorno <- rbind(maiorRisco,maiorRetorno,c("Maior Risco", "Maior Retorno"))
maiorRiscoRetorno
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- cbind(rbind(maiorRisco,maiorRetorno),c("Maior Risco", "Maior Retorno"))
maiorRiscoRetorno
maiorRiscoRetorno <- cbind(rbind(maiorRisco,maiorRetorno),Tipo = c("Maior Risco", "Maior Retorno"))
maiorRiscoRetorno
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- cbind(rbind(maiorRisco,maiorRetorno),Tipo = c("Maior Risco", "Maior Retorno"))
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
kable(maiorRiscoRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
maiorRisco <- riscoRetorno[which.max(riscoRetorno$Cv),]
maiorRetorno <- riscoRetorno[which.max(riscoRetorno$Media),]
maiorRiscoRetorno <- cbind(rbind(maiorRisco,maiorRetorno),Tipo = c("Maior Risco", "Maior Retorno"))
if (rownames(maiorRetorno) == rownames(maiorRisco)) {
kable(maiorRetorno, col.names = colnames(riscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}else{
kable(maiorRiscoRetorno, col.names = colnames(maiorRiscoRetorno)) %>%
kable_styling(full_width = F, bootstrap_options = c("striped", "hover", "condensed", "responsive"))
}
